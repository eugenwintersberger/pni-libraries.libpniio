Installation instructions
=========================

1.) Requirements
    ------------

Required software to build libpninexus:
-> gcc >= 4.7
-> cmake >= 2.8.0

To build the documentation some additional programs are required
-> doxygen
-> pdflatex
-> pygmented

Library dependencies:
-> h5cpp      >= 0.4.0
-> boost      >= 1.46
-> HDF5       >= 1.5.8
-> cppunit 


2.) Obtaining the sources
    ---------------------

The sources for a stable release can be obtained from the release site of
libpninexus's GitHub repository 

https://github.com/pni-libraries/libpninexus/releases

Click on the .zip or .tar.gz button below the release of your choice to download
the release tarball. 

It you want to work with the current development branch checkout the libpninexus's 
git repository from GitHub with 

git clone https://github.com/pni-libraries/libpninexus.git libpninexus

You will find the current development version on the HEAD of the master branch. 


3.) Building the software
    ---------------------

The libpninexus uses CMake as its build system. In order to build the
code create a new build directory outside the source tree 

$> mkdir libpninexus-build

and change to it 

$> cd libpninexus-build

Run cmake 

$> cmake ../libpninexus

where the last argument is the path to the source tree. Finally run make with 

$> make 

in the build directory to build the library. As the make run is not very verbose
you may want to add 

$> VERBOSE=ON make 

to get more detailed information about the build process in case of errors. 
The make run will build the library and the unit tests. In order to build the
documentation use 

$> make doc 

in the build directory. There are currently two build configurations available:
debug and release. The latter one is the default. The former one might be useful
in case of problems that occur either during testing or with applications using
the library. To build the debug version use 

$> cmake -DCMAKE_BUILD_TYPE=DEBUG ../libpninexus


4.) Testing the software
    --------------------

Once make is finished without an error you can start the tests with 

$> make cleanup test

The additional cleanup target removes artifacts from previous tests runs. We did
not want to remove these files automatically after every test as they might be
useful for debugging. However, they should be removed before every new test run
- this is exactly what the cleanup target does.

5) Software installation
   ---------------------

Finally the library can be installed with 

$> make install

from the build directory. The default install prefix is /usr/local. Files would
be installed in the following locations 

/usr/local/lib                -- the library's binaries
/usr/local/lib/pkg-config     -- pninexus.pc pkg-config file
/usr/local/include            -- the library's header files
/usr/local/share/doc/libpninexus -- API documentation and users guide

To install to a different prefix use 

$> cmake -DCMAKE_INSTALL_PREFIX=/path/to/prefix ../libpninexus

6.) System configuration
    --------------------

This section most probably only important if you have installed libpninexus to a
non-default directory not recognized by your system. 
To run software which uses the library the LD_LIBRARY_PATH variable has to be
set appropriately with 

$>export LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/install/prefix/lib

In addition, in order to use pkg-config for building code with libpninexus, the 
PKG_CONFIG_PATH has to be set 

$>export PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/install/prefix/lib/pkg-config

You can check if everything works well with 

$> pkg-config --cflags --libs pninexus

which should show a list of linker and compiler flags for libpninexus. 
To build code one can then simply use 

$>g++ -oprogram program.cpp $(pkg-config --cflags --libs pninexus)


